= Journal 2024-12-01 =

== Pre-Commit Lint Git Commit Messages ==
:pre-commit:git:gitlint:

- [[/diary/2024-12-05#commitizen|Journal 2024-12-05 Commitizen]]
- [[https://www.conventionalcommits.org/en/v1.0.0/|ConventionalCommits.org]]
- [[https://jorisroovers.com/gitlint/|Gitlint]]

  `.gitlint`:

  {{{conf
  [general]
  ignore = body-is-missing
  contrib = contrib-title-conventional-commits
  }}}

  `.pre-commit-config.yaml`:

  {{{yaml
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
        stages: [commit-msg]
  }}}

- Install the `commit-msg` hook: `pre-commit install --hook-type commit-msg`
- To enable `gitlint` in :vim: [[https://github.com/dense-analysis/ale|ALE - Asynchronous Lint Engine]],
  `uv tool install gitlint-core --with gitlint`.
  `gitlint` alone does not provide the command line interface for `uv` to
  expose, and `gitlint-core` lacks the default optional content.
- The Initial Commit generated by `Pyscaffold` provides an easy check that
  `gitlint` works directly and via `pre-commit`.

  {{{bash
  # 1: CT1 Title does not follow ConventionalCommits.org format
  # 'type(optional-scope): description': "Initial commit"

  pre-commit run --hook-stage commit-msg \
    --commit-msg-filename .git/COMMIT_EDITMSG

  cat .git/COMMIT_EDITMSG | gitlint
  }}}
